Index: pulseaudio/src/pulse/volume.c
===================================================================
--- pulseaudio.orig/src/pulse/volume.c
+++ pulseaudio/src/pulse/volume.c
@@ -272,7 +272,7 @@ pa_volume_t pa_sw_volume_from_linear(dou
      * same volume value! That's why we need the lround() below!
      */
 
-    return (pa_volume_t) PA_CLAMP_VOLUME((uint64_t) lround(cbrt(v) * PA_VOLUME_NORM));
+    return (pa_volume_t) PA_CLAMP_VOLUME((uint64_t) lround(pow(v,1/POW_VALUE) * PA_VOLUME_NORM));
 }
 
 double pa_sw_volume_to_linear(pa_volume_t v) {
@@ -288,7 +288,7 @@ double pa_sw_volume_to_linear(pa_volume_
 
     f = ((double) v / PA_VOLUME_NORM);
 
-    return f*f*f;
+    return pow(f,POW_VALUE);
 }
 
 char *pa_cvolume_snprint(char *s, size_t l, const pa_cvolume *c) {
Index: pulseaudio/src/pulse/volume.h
===================================================================
--- pulseaudio.orig/src/pulse/volume.h
+++ pulseaudio/src/pulse/volume.h
@@ -173,6 +173,8 @@ pa_cvolume* pa_cvolume_set(pa_cvolume *a
  * might become part of an ABI.*/
 #define PA_CVOLUME_SNPRINT_MAX 320
 
+#define POW_VALUE 1.8
+
 /** Pretty print a volume structure. Returns \a s. */
 char *pa_cvolume_snprint(char *s, size_t l, const pa_cvolume *c);
 
